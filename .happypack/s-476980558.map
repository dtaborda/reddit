{"version":3,"sources":["app/views/reddit/search_container/search/news_card_drag_and_drop/news_info_drag_ui/news_info_ui.jsx"],"names":["boxSource","beginDrag","props","name","title","endDrag","monitor","dropResult","getDropResult","window","open","url","NewsInfoUI","BOX","connect","connectDragSource","dragSource","isDragging","opacity","content","author","thumbnail","numComments","ups","downs","string","isRequired","number","func","bool"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;;;;;;;;;;;AAEA,IAAMA,YAAY;AAChBC,WADgB,qBACNC,KADM,EACC;AACf,WAAO;AACLC,YAAMD,MAAME;AADP,KAAP;AAGD,GALe;AAOhBC,SAPgB,mBAORH,KAPQ,EAODI,OAPC,EAOQ;AACtB,QAAMC,aAAaD,QAAQE,aAAR,EAAnB;;AAEA,QAAID,UAAJ,EAAgB;AACdE,aAAOC,IAAP,CAAYH,WAAWI,GAAvB,EAA4B,QAA5B;AACD;AACF;AAbe,CAAlB;;IAoBqBC,U,WAJpB,0BAAW,qBAAUC,GAArB,EAA0Bb,SAA1B,EAAqC,UAACc,OAAD,EAAUR,OAAV;AAAA,SAAuB;AAC3DS,uBAAmBD,QAAQE,UAAR,EADwC;AAE3DC,gBAAYX,QAAQW,UAAR;AAF+C,GAAvB;AAAA,CAArC,C;;;;;;;;;;;6BAkBU;AAAA,mBACmC,KAAKf,KADxC;AAAA,UACCe,UADD,UACCA,UADD;AAAA,UACaF,iBADb,UACaA,iBADb;;AAEP,UAAMG,UAAUD,aAAa,GAAb,GAAmB,CAAnC;AACA,aACEF,kBACE;AAAA;AAAA,UAAK,OAAO,EAAEG,gBAAF,EAAZ,EAAyB,WAAW,uBAAOC,OAA3C;AACE;AAAA;AAAA;AAAM,eAAKjB,KAAL,CAAWE;AAAjB,SADF;AAEE;AAAA;AAAA;AAAM,eAAKF,KAAL,CAAWkB;AAAjB,SAFF;AAGE,+CAAK,KAAK,KAAKlB,KAAL,CAAWmB,SAArB,GAHF;AAIE;AAAA;AAAA;AAAM,eAAKnB,KAAL,CAAWoB;AAAjB,SAJF;AAKE;AAAA;AAAA;AAAM,eAAKpB,KAAL,CAAWqB;AAAjB,SALF;AAME;AAAA;AAAA;AAAM,eAAKrB,KAAL,CAAWsB;AAAjB;AANF,OADF,CADF;AAYD;;;wBA5BsB;AACrB,aAAO;AACLpB,eAAO,iBAAUqB,MAAV,CAAiBC,UADnB;AAELN,gBAAQ,iBAAUK,MAAV,CAAiBC,UAFpB;AAGLL,mBAAW,iBAAUI,MAAV,CAAiBC,UAHvB;AAILJ,qBAAa,iBAAUK,MAAV,CAAiBD,UAJzB;AAKLH,aAAK,iBAAUI,MAAV,CAAiBD,UALjB;AAMLF,eAAO,iBAAUG,MAAV,CAAiBD,UANnB;AAOLX,2BAAmB,iBAAUa,IAAV,CAAeF,UAP7B;AAQLT,oBAAY,iBAAUY,IAAV,CAAeH;AARtB,OAAP;AAUD;;;;;kBAZkBd,U;;;;;;;;gCApBfZ,S;;gCAoBeY,U","file":"news_info_ui.jsx","sourceRoot":"/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport ItemTypes from 'views/reddit/search_container/search/news_card_drag_and_drop/item_types';\nimport { DragSource } from 'react-dnd';\n\nimport styles from './news_info_ui.scss';\n\nconst boxSource = {\n  beginDrag(props) {\n    return {\n      name: props.title\n    };\n  },\n\n  endDrag(props, monitor) {\n    const dropResult = monitor.getDropResult();\n\n    if (dropResult) {\n      window.open(dropResult.url, '_blank');\n    }\n  }\n};\n\n@DragSource(ItemTypes.BOX, boxSource, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n}))\nexport default class NewsInfoUI extends Component {\n  static get propTypes() {\n    return {\n      title: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      thumbnail: PropTypes.string.isRequired,\n      numComments: PropTypes.number.isRequired,\n      ups: PropTypes.number.isRequired,\n      downs: PropTypes.number.isRequired,\n      connectDragSource: PropTypes.func.isRequired,\n      isDragging: PropTypes.bool.isRequired\n    };\n  }\n\n  render() {\n    const { isDragging, connectDragSource } = this.props;\n    const opacity = isDragging ? 0.4 : 1;\n    return (\n      connectDragSource(\n        <div style={{ opacity }} className={styles.content}>\n          <div>{this.props.title}</div>\n          <div>{this.props.author}</div>\n          <img src={this.props.thumbnail} />\n          <div>{this.props.numComments}</div>\n          <div>{this.props.ups}</div>\n          <div>{this.props.downs}</div>\n        </div>\n      )\n    );\n  }\n}\n"]}