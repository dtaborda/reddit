{"version":3,"sources":["app/action_types/index.js"],"names":["list","require","reduce","result","actionTypes","tryMerge","obj","newObj","isDev","Object","keys","forEach","type","Error"],"mappings":";;;;;;;;AAAA;;;;;;AAEA,IAAMA,OAAO,CACXC,QAAQ,UAAR,CADW,CAAb;;AAKA;;;;eAGeD,KAAKE,MAAL,CAAY,UAACC,MAAD,EAASC,WAAT;AAAA,SAAyBC,SAASF,MAAT,EAAiBC,WAAjB,CAAzB;AAAA,CAAZ,EAAoE,EAApE,C;;;;AAIf;;;;;AAIA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,MAAvB,EAA+B;AAC7B,MAAI,cAAIC,KAAR,EAAe;AACbC,WAAOC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAACC,IAAD,EAAU;AACpC,UAAIN,IAAIM,IAAJ,CAAJ,EAAe,MAAM,IAAIC,KAAJ,mBAA0BD,IAA1B,sBAAN;AAChB,KAFD;AAGD;;AAED,sBAAYN,GAAZ,EAAoBC,MAApB;AACD;;;;;;;;gCAxBKP,I;;gCAgBGK,Q","file":"index.js","sourceRoot":"/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge","sourcesContent":["import env from 'utils/env';\n\nconst list = [\n  require('./reddit')\n];\n\n\n/*\n* Export the merged list of action types.\n*/\nexport default list.reduce((result, actionTypes) => tryMerge(result, actionTypes), {});\n\n\n\n/*\n* Little helper only for Dev, just throw if we find an Action that already exists\n* just to make easier the development.\n*/\nfunction tryMerge(obj, newObj) {\n  if (env.isDev) {\n    Object.keys(newObj).forEach((type) => {\n      if (obj[type]) throw new Error(`ActionType: [${type}] already exists`);\n    });\n  }\n\n  return { ...obj, ...newObj };\n}\n"]}