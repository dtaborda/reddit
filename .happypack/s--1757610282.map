{"version":3,"sources":["app/store/index.js"],"names":["configureStore","initialState","apiClient","createStoreFunc","predicate","getState","action","process","env","NODE_ENV","createStoreWithMiddleware","__DEVELOPMENT__","__CLIENT__","__DEVTOOLS__","window","devToolsExtension","require","persistState","location","href","match","store","module","hot","accept","nextRootReducer","replaceReducer"],"mappings":";;;;;kBAKwBA,c;;AALxB;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,cAAT,CAAwBC,YAAxB,EAAsCC,SAAtC,EAAiD;AAC9D,MAAMC,kBAAkB,4BACtB,wCAAuBD,SAAvB,CADsB,EAEtB,2BAAa;AACXE,eAAW,mBAACC,QAAD,EAAWC,MAAX;AAAA,aAAsBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA/C;AAAA;AADA,GAAb,CAFsB,CAAxB;;AAOA,MAAIC,4BAA4B,IAAhC;;AAEA,MAAIC,mBAAmBC,UAAnB,IAAiCC,YAAjC,IAAiDC,OAAOC,iBAA5D,EAA+E;AAAA,mBACpDC,QAAQ,gBAAR,CADoD;;AAAA,QACrEC,YADqE,YACrEA,YADqE;;AAE7EP,gCAA4B,oBAC1BP,eAD0B,EAE1BW,OAAOC,iBAAP,EAF0B,EAG1BE,aAAaH,OAAOI,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,6BAA3B,CAAb,CAH0B,qBAA5B;AAKD,GAPD,MAOO;AACLV,gCAA4BP,mCAA5B;AACD;;AAED,MAAMkB,QAAQX,8CAAuCT,YAAvC,CAAd;;AAEA,MAAIqB,OAAOC,GAAX,EAAgB;AACd;AACAD,WAAOC,GAAP,CAAWC,MAAX,CAAkB,UAAlB,EAA8B,YAAM;AAClC,UAAMC,kBAAkBT,QAAQ,UAAR,CAAxB;AACAK,YAAMK,cAAN,CAAqBD,eAArB;AACD,KAHD;AAID;;AAED,SAAOJ,KAAP;AACD;;;;;;;;gCAhCuBrB,c","file":"index.js","sourceRoot":"/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport createLogger from 'redux-logger';\nimport rootReducer from 'reducers';\nimport asyncActionsMiddleware from 'middleware/async_actions_middleware';\n\nexport default function configureStore(initialState, apiClient) {\n  const createStoreFunc = applyMiddleware(\n    asyncActionsMiddleware(apiClient),\n    createLogger({\n      predicate: (getState, action) => process.env.NODE_ENV !== 'production'\n    })\n  );\n\n  let createStoreWithMiddleware = null;\n\n  if (__DEVELOPMENT__ && __CLIENT__ && __DEVTOOLS__ && window.devToolsExtension) {\n    const { persistState } = require('redux-devtools');\n    createStoreWithMiddleware = compose(\n      createStoreFunc,\n      window.devToolsExtension(),\n      persistState(window.location.href.match(/[?&]debug_session=([^&]+)\\b/))\n    )(createStore);\n  } else {\n    createStoreWithMiddleware = createStoreFunc(createStore);\n  }\n\n  const store = createStoreWithMiddleware(rootReducer, initialState);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('reducers', () => {\n      const nextRootReducer = require('reducers');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\n"]}