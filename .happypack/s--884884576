'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reddit_api = require('./reddit_api');

var _reddit_api2 = _interopRequireDefault(_reddit_api);

var _api = require('./api');

var _api2 = _interopRequireDefault(_api);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ApiFacade = function () {
  function ApiFacade(req) {
    _classCallCheck(this, ApiFacade);

    var api = new _api2.default(req);
    this.redditApi = new _reddit_api2.default(api);
  }

  _createClass(ApiFacade, [{
    key: 'reddit',
    get: function get() {
      return this.redditApi;
    }
  }]);

  return ApiFacade;
}();

exports.default = ApiFacade;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(ApiFacade, 'ApiFacade', '/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge/app/api/api_facade.js');
}();

;