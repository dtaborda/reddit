'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _damian = require('./damian');

var _damian2 = _interopRequireDefault(_damian);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DamianContainer = function (_Component) {
  _inherits(DamianContainer, _Component);

  function DamianContainer() {
    _classCallCheck(this, DamianContainer);

    return _possibleConstructorReturn(this, (DamianContainer.__proto__ || Object.getPrototypeOf(DamianContainer)).apply(this, arguments));
  }

  _createClass(DamianContainer, [{
    key: 'handleGoToProfile',
    value: function handleGoToProfile() {
      _reactRouter.browserHistory.push('/reddit');
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_damian2.default, { onGoToProfile: this.handleGoToProfile.bind(this) });
    }
  }]);

  return DamianContainer;
}(_react.Component);

exports.default = DamianContainer;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(DamianContainer, 'DamianContainer', '/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge/app/views/damian/damian_container.jsx');
}();

;