'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _item_types = require('views/reddit/search_container/search/news_card_drag_and_drop/item_types');

var _item_types2 = _interopRequireDefault(_item_types);

var _reactDnd = require('react-dnd');

var _reddit_ui = require('./reddit_ui.scss');

var _reddit_ui2 = _interopRequireDefault(_reddit_ui);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var boxTarget = {
  drop: function drop(props, monitor) {
    return {
      url: props.onRedirect()
    };
  }
};

var ReeditUI = (_dec = (0, _reactDnd.DropTarget)(_item_types2.default.BOX, boxTarget, function (connect, monitor) {
  return {
    connectDropTarget: connect.dropTarget(),
    isOver: monitor.isOver(),
    canDrop: monitor.canDrop()
  };
}), _dec(_class = function (_Component) {
  _inherits(ReeditUI, _Component);

  function ReeditUI() {
    _classCallCheck(this, ReeditUI);

    return _possibleConstructorReturn(this, (ReeditUI.__proto__ || Object.getPrototypeOf(ReeditUI)).apply(this, arguments));
  }

  _createClass(ReeditUI, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
      var canDrop = _props.canDrop;
      var isOver = _props.isOver;
      var connectDropTarget = _props.connectDropTarget;

      var isActive = canDrop && isOver;

      var border = '1px solid white';
      if (isActive) {
        border = '1px solid blue';
      } else if (canDrop) {
        border = '1px solid white';
      }

      return connectDropTarget(_react2.default.createElement(
        'div',
        { style: { border: border }, className: _reddit_ui2.default.content },
        _react2.default.createElement('img', { src: this.props.logo }),
        _react2.default.createElement(
          'h4',
          null,
          this.props.title
        )
      ));
    }
  }], [{
    key: 'propTypes',
    get: function get() {
      return {
        connectDropTarget: _react.PropTypes.func.isRequired,
        isOver: _react.PropTypes.bool.isRequired,
        canDrop: _react.PropTypes.bool.isRequired,
        logo: _react.PropTypes.string.isRequired,
        title: _react.PropTypes.string.isRequired
      };
    }
  }]);

  return ReeditUI;
}(_react.Component)) || _class);
exports.default = ReeditUI;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(boxTarget, 'boxTarget', '/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge/app/views/reddit/search_container/search/news_card_drag_and_drop/reddit_drop_ui/reddit_ui.jsx');

  __REACT_HOT_LOADER__.register(ReeditUI, 'ReeditUI', '/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge/app/views/reddit/search_container/search/news_card_drag_and_drop/reddit_drop_ui/reddit_ui.jsx');
}();

;