{"version":3,"sources":["app/views/reddit/search_container/search/news_card_drag_and_drop/reddit_ui/reddit_ui.jsx"],"names":["boxTarget","drop","name","url","ReeditUI","BOX","connect","monitor","connectDropTarget","dropTarget","isOver","canDrop","props","isActive","backgroundColor","content","func","isRequired","bool"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;AAEA,IAAMA,YAAY;AAChBC,MADgB,kBACT;AACL,WAAO;AACLC,YAAM,QADD;AAELC,WAAK;AACL;AAHK,KAAP;AAKD;AAPe,CAAlB;;IAeqBC,Q,WALpB,0BAAW,qBAAUC,GAArB,EAA0BL,SAA1B,EAAqC,UAACM,OAAD,EAAUC,OAAV;AAAA,SAAuB;AAC3DC,uBAAmBF,QAAQG,UAAR,EADwC;AAE3DC,YAAQH,QAAQG,MAAR,EAFmD;AAG3DC,aAASJ,QAAQI,OAAR;AAHkD,GAAvB;AAAA,CAArC,C;;;;;;;;;;;6BAcU;AAAA,mBACwC,KAAKC,KAD7C;AAAA,UACCD,OADD,UACCA,OADD;AAAA,UACUD,MADV,UACUA,MADV;AAAA,UACkBF,iBADlB,UACkBA,iBADlB;;AAEP,UAAMK,WAAWF,WAAWD,MAA5B;;AAEA,UAAII,kBAAkB,MAAtB;AACA,UAAID,QAAJ,EAAc;AACZC,0BAAkB,WAAlB;AACD,OAFD,MAEO,IAAIH,OAAJ,EAAa;AAClBG,0BAAkB,WAAlB;AACD;;AAED,aAAON,kBACL;AAAA;AAAA,UAAK,OAAO,EAAEM,gCAAF,EAAZ,EAAiC,WAAW,oBAAOC,OAAnD;AACE,+CAAK,yBAAL;AADF,OADK,CAAP;AAKD;;;wBAxBsB;AACrB,aAAO;AACLP,2BAAmB,iBAAUQ,IAAV,CAAeC,UAD7B;AAELP,gBAAQ,iBAAUQ,IAAV,CAAeD,UAFlB;AAGLN,iBAAS,iBAAUO,IAAV,CAAeD;AAHnB,OAAP;AAKD;;;;;kBAPkBb,Q;;;;;;;;gCAffJ,S;;gCAeeI,Q","file":"reddit_ui.jsx","sourceRoot":"/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport ItemTypes from 'views/reddit/search_container/search/news_card_drag_and_drop/item_types';\nimport { DropTarget } from 'react-dnd';\nimport redditLogo from 'assets/images/reddit-logo.png';\n\nimport styles from './reddit_ui.scss';\n\nconst boxTarget = {\n  drop() {\n    return {\n      name: 'reddit',\n      url: 'mailto:damian.taborda@gmail.com'\n      //url: 'http://www.reddit.com'\n    };\n  }\n};\n\n@DropTarget(ItemTypes.BOX, boxTarget, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop()\n}))\nexport default class ReeditUI extends Component {\n  static get propTypes() {\n    return {\n      connectDropTarget: PropTypes.func.isRequired,\n      isOver: PropTypes.bool.isRequired,\n      canDrop: PropTypes.bool.isRequired\n    };\n  }\n\n  render() {\n    const { canDrop, isOver, connectDropTarget } = this.props;\n    const isActive = canDrop && isOver;\n\n    let backgroundColor = '#222';\n    if (isActive) {\n      backgroundColor = 'darkgreen';\n    } else if (canDrop) {\n      backgroundColor = 'darkkhaki';\n    }\n\n    return connectDropTarget(\n      <div style={{ backgroundColor }} className={styles.content}>\n        <img src={redditLogo} />\n      </div>\n    );\n  }\n}\n"]}