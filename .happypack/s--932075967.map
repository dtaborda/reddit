{"version":3,"sources":["app/views/reddit/search_container/search/news_card_drag_and_drop/news_card_drag_and_drop.jsx"],"names":["addClassName","el","className","classes","split","indexOf","concat","join","removeClassName","filter","c","NewsCardDragAndDrop","document","body","bodyWithOpenModal","props","onClose","redditPost","permalink","email","title","content","handleClose","bind","author","thumbnail","numComments","ups","downs","icons","handleRedditRedirect","handleEmailRedirect","string","isRequired","number","showModal","bool","func"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;AAGA,SAASA,YAAT,CAAsBC,EAAtB,EAA0BC,SAA1B,EAAqC;AACnC,MAAMC,UAAUF,GAAGC,SAAH,CAAaE,KAAb,CAAmB,GAAnB,CAAhB;AACA,MAAID,QAAQE,OAAR,CAAgBH,SAAhB,MAA+B,CAAC,CAApC,EAAuC;AACrCD,OAAGC,SAAH,GAAeC,QAAQG,MAAR,CAAeJ,SAAf,EAA0BK,IAA1B,CAA+B,EAA/B,CAAf;AACD;AACF;;AAED,SAASC,eAAT,CAAyBP,EAAzB,EAA6BC,SAA7B,EAAwC;AACtC,MAAMC,UAAUF,GAAGC,SAAH,CAAaE,KAAb,CAAmB,GAAnB,CAAhB;AACAH,KAAGC,SAAH,GAAeC,QAAQM,MAAR,CAAe,UAACC,CAAD;AAAA,WAAOA,MAAMR,SAAb;AAAA,GAAf,EAAuCK,IAAvC,CAA4C,EAA5C,CAAf;AACD;;IAGoBI,mB,WADpB,8D;;;;;;;;;;;kCAgBe;AACZH,sBAAgBI,SAASC,IAAzB,EAA+B,kCAAOC,iBAAtC;AACA,WAAKC,KAAL,CAAWC,OAAX;AACD;;;2CAEsB;AACrB,UAAMC,wCAAsC,KAAKF,KAAL,CAAWG,SAAvD;AACA,aAAOD,UAAP;AACD;;;0CAEqB;AACpB,UAAMA,wCAAsC,KAAKF,KAAL,CAAWG,SAAvD;AACA,UAAMC,QAAQ,kEAAkEF,UAAhF;AACA,aAAOE,KAAP;AACD;;;6BAEQ;AAAA,UACCJ,KADD,GACW,IADX,CACCA,KADD;;;AAGP,UAAI,KAAKA,KAAL,CAAWK,KAAf,EAAsB;AACpBpB,qBAAaY,SAASC,IAAtB,EAA4B,kCAAOC,iBAAnC;AACD;;AAED,aACE;AAAA;AAAA,UAAK,WAAW,kCAAOO,OAAvB,EAAgC,SAAS,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAzC;AACE;AACE,iBAAOR,MAAMK,KADf;AAEE,kBAAQL,MAAMS,MAFhB;AAGE,qBAAWT,MAAMU,SAHnB;AAIE,uBAAaV,MAAMW,WAJrB;AAKE,eAAKX,MAAMY,GALb;AAME,iBAAOZ,MAAMa,KANf;AAOE,qBAAWb,MAAMG;AAPnB,UADF;AAUE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AADF,SAVF;AAaE;AAAA;AAAA,YAAK,WAAW,kCAAOW,KAAvB;AACE;AACE,sCADF;AAEE,wBAAY,KAAKC,oBAAL,CAA0BP,IAA1B,CAA+B,IAA/B,CAFd;AAGE,mBAAM;AAHR,YADF;AAME;AACE,oCADF;AAEE,wBAAY,KAAKQ,mBAAL,CAAyBR,IAAzB,CAA8B,IAA9B,CAFd;AAGE,mBAAM;AAHR;AANF;AAbF,OADF;AA4BD;;;wBAjEsB;AACrB,aAAO;AACLH,eAAO,iBAAUY,MAAV,CAAiBC,UADnB;AAELT,gBAAQ,iBAAUQ,MAAV,CAAiBC,UAFpB;AAGLR,mBAAW,iBAAUO,MAAV,CAAiBC,UAHvB;AAILP,qBAAa,iBAAUQ,MAAV,CAAiBD,UAJzB;AAKLN,aAAK,iBAAUO,MAAV,CAAiBD,UALjB;AAMLL,eAAO,iBAAUM,MAAV,CAAiBD,UANnB;AAOLf,mBAAW,iBAAUc,MAAV,CAAiBC,UAPvB;AAQLE,mBAAW,iBAAUC,IARhB;AASLpB,iBAAS,iBAAUqB;AATd,OAAP;AAWD;;;;;kBAbkB1B,mB;;;;;;;;gCAbZX,Y;;gCAOAQ,e;;gCAMYG,mB","file":"news_card_drag_and_drop.jsx","sourceRoot":"/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport NewsInfoDragUI from './news_info_drag_ui';\nimport ReeditDropUI from './reddit_drop_ui';\nimport redditLogo from 'assets/images/reddit-logo.png';\nimport mailLogo from 'assets/images/mail-logo.png';\n\nimport styles from './news_card_drag_and_drop.scss';\n\n\nfunction addClassName(el, className) {\n  const classes = el.className.split(' ');\n  if (classes.indexOf(className) === -1) {\n    el.className = classes.concat(className).join('');\n  }\n}\n\nfunction removeClassName(el, className) {\n  const classes = el.className.split(' ');\n  el.className = classes.filter((c) => c !== className).join('');\n}\n\n@DragDropContext(HTML5Backend)\nexport default class NewsCardDragAndDrop extends Component {\n  static get propTypes() {\n    return {\n      title: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      thumbnail: PropTypes.string.isRequired,\n      numComments: PropTypes.number.isRequired,\n      ups: PropTypes.number.isRequired,\n      downs: PropTypes.number.isRequired,\n      permalink: PropTypes.string.isRequired,\n      showModal: PropTypes.bool,\n      onClose: PropTypes.func\n    };\n  }\n\n  handleClose() {\n    removeClassName(document.body, styles.bodyWithOpenModal);\n    this.props.onClose();\n  }\n\n  handleRedditRedirect() {\n    const redditPost = `https://www.reddit.com${this.props.permalink}`;\n    return redditPost;\n  }\n\n  handleEmailRedirect() {\n    const redditPost = `https://www.reddit.com${this.props.permalink}`;\n    const email = 'mailto:dummy@test.com?subject=Checkout this Reddit post&body=' + redditPost;\n    return email;\n  }\n\n  render() {\n    const { props } = this;\n\n    if (this.props.title) {\n      addClassName(document.body, styles.bodyWithOpenModal);\n    }\n\n    return (\n      <div className={styles.content} onClick={this.handleClose.bind(this)}>\n        <NewsInfoDragUI\n          title={props.title}\n          author={props.author}\n          thumbnail={props.thumbnail}\n          numComments={props.numComments}\n          ups={props.ups}\n          downs={props.downs}\n          permalink={props.permalink}\n        />\n        <div>\n          <p>Drag the card on the left to the desired action</p>\n        </div>\n        <div className={styles.icons}>\n          <ReeditDropUI\n            logo={redditLogo}\n            onRedirect={this.handleRedditRedirect.bind(this)}\n            title=\"Opend on Reddit\"\n          />\n          <ReeditDropUI\n            logo={mailLogo}\n            onRedirect={this.handleEmailRedirect.bind(this)}\n            title=\"Email to a friend\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]}