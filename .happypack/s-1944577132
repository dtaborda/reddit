'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createAsyncActionsTypes;
/*
* Simple helper for creating async action types.
* For each type provided an object with the request / done / fail
* version is gonna be provided.
*/
function createAsyncActionsTypes(types) {
  if (!Array.isArray(types)) {
    throw new Error('Expecting types to be an array of constants');
  }

  var augmentedTypes = {};

  types.forEach(function (type) {
    augmentedTypes[type] = {
      rootCode: null,
      code: type,
      request: {
        code: type + '_Request',
        rootCode: type
      },
      done: {
        code: type + '_Done',
        rootCode: type
      },
      fail: {
        code: type + '_Fail',
        rootCode: type
      }
    };
  });

  return augmentedTypes;
}
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(createAsyncActionsTypes, 'createAsyncActionsTypes', '/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge/app/action_types/utils/create_async_actions_types.js');
}();

;