'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sessionReducer;

var _immutable_helpers = require('./utils/immutable_helpers');

var ih = _interopRequireWildcard(_immutable_helpers);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var initialState = ih.immutable({});

function sessionReducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  return state;
}
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(initialState, 'initialState', '/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge/app/reducers/application_reducer.js');

  __REACT_HOT_LOADER__.register(sessionReducer, 'sessionReducer', '/Users/damian.taborda/ws/whiteprompt/reddit/DamianTaborda_WebCodeChallenge/app/reducers/application_reducer.js');
}();

;